stages:
  - validate
  - plan
  - apply

image:
  name: hashicorp/terraform:light
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

before_script:
  - rm -rf .terraform
  - terraform --version
  - echo 'Install gcloud cli'
  - curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-405.0.0-linux-x86_64.tar.gz
  - tar -xf google-cloud-cli-405.0.0-linux-x86.tar.gz
  - ./google-cloud-sdk/install.sh

test:validate:
  stage: validate
  environment:
    name: test
  tags:
    - docker
    - ticketing
    - linux
  script:
    - echo 'Login to Google Cloud with Service Account'
    - ./google-cloud-sdk/bin/gcloud auth activate-service-account --key-file="$GCLOUD_KEY_FILE"
    - cd ./environments/test
    - terraform init
    - terraform validate

test:plan:
  stage: plan
  environment:
    name: test
  tags:
    - docker
    - ticketing
    - linux
  script:
    - echo 'Login to Google Cloud with Service Account'
    - ./google-cloud-sdk/bin/gcloud auth activate-service-account --key-file="$GCLOUD_KEY_FILE"
    - cd ./environments/test
    - terraform plan -out "planfile"
  needs:
    - test:validate
  artifacts:
    paths:
      - planfile
#      - ./environments/test/planfile

test:apply:
  stage: apply
  environment:
    name: test
  tags:
    - docker
    - ticketing
    - linux
  script:
    - echo 'Login to Google Cloud with Service Account'
    - ./google-cloud-sdk/bin/gcloud auth activate-service-account --key-file="$GCLOUD_KEY_FILE"
    - cd ./environments/test
    - terraform apply -input=false "planfile"
  needs:
    - test:plan
  when: manual
